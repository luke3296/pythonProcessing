width  = 800
height = 800

class vector:
    def __init__(self,direc,magi):
        self.direction = direc;
        self.magnitude = magi;
        self.xComp  = cos(self.direction)*self.magnitude;
        self.yComp = sin(self.direction)*self.magnitude;

    def update(self):
        self.xComp  = cos(self.direction)*self.magnitude;
        self.yComp = sin(self.direction)*self.magnitude;

class boid:
    def __init__(self,posx,posy):
        self.x = posx;
        self.y = posy;
        self.vel = vector(random(0,6.28),1)
        self.accel = vector(0,1)
    
    def show(self):
        fill(255)
        rect(self.x,self.y,10,10)
    
    def allign(self):
        sumdirec = self.vel.direction
        numOfNeighbors = 1

        for j in range(len(flock)):
            
            same = True
                
            distancex = abs(self.x - flock[j].x)
            distancey = abs(self.y - flock[j].y)
            
            distancecomb = distancex + distancey

            if distancecomb == 0:
                same = False
                
            elif distancecomb <= 30 and same:
                degre = flock[j].vel.direction
                sumdirec += degre
                numOfNeighbors += 1
        
        #if sumdirec == 0 and numOfNeighbors == 0:
         #   avg = self.vel.direction
        #else:
        avg = sumdirec/numOfNeighbors
        return avg            
        
    
    def update(self):
        self.vel.update()

        if self.x > width:
            self.x = 0;
        if self.y > height:
            self.y = 0;
        if self.x < 0:
            self.x = width;
        if self.y < 0:
            self.y = height;

        self.x = self.x + self.vel.xComp
        self.y =self.y + self.vel.yComp;
        self.vel.direction = (self.vel.direction + self.allign())/2
        #if random(-10,10) < 0:
           #self.vel.direction += 0.01
        #random motion to prove allign works

flock = []

def setup():
    size(height,width);
    background(240);
    for i in range(0,10):
        flock.append(boid(random(100,700),random(100,700)))
    


def draw():
    background(255)
    for i in range(len(flock)):
        flock[i].update()
        flock[i].show()
